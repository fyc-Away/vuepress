{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,a,s){\"use strict\";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"面试总结-自用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试总结-自用\"}},[t._v(\"#\")]),t._v(\" 面试总结(自用)\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"vue\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue\"}},[t._v(\"#\")]),t._v(\" vue\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"聊聊对vue的理解\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#聊聊对vue的理解\"}},[t._v(\"#\")]),t._v(\" 聊聊对vue的理解\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"vue是一个渐进式的JS框架。他易用，灵活，高效； 可以把一个页面分隔成多个组件；当其他页面有类似功能时，直接让封装的组件进行复用； 他是构建用户界面的声明式框架，只关心图层；不关心具体是如何实现的\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-model的是什么？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-model的是什么？\"}},[t._v(\"#\")]),t._v(\" V-model的是什么？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Vue的双向数据绑定是由数据劫持结合发布者订阅者实现的。 数据劫持是通过Object.defineProperty()来劫持对象数据的setter和getter操作。 在数据变动时作你想做的事\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"通过Observer来监听自己的model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer和Compile之间的通信桥梁，达到数据变化->视图更新 在初始化vue实例时，遍历data这个对象，给每一个键值对利用Object.definedProperty对data的键值对新增get和set方法，利用了事件监听DOM的机制，让视图去改变数据\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"谈谈对生命周期的理解\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#谈谈对生命周期的理解\"}},[t._v(\"#\")]),t._v(\" 谈谈对生命周期的理解\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"beforeCreate阶段：vue实例的挂载元素el和数据对象data都是undefined，还没有初始化。\")]),t._v(\" \"),s(\"li\",[t._v(\"created阶段：vue实例的数据对象data有了，可以访问里面的数据和方法，未挂载到DOM，el还没有\")]),t._v(\" \"),s(\"li\",[t._v(\"beforeMount阶段：vue实例的el和data都初始化了，但是挂载之前为虚拟的dom节点\")]),t._v(\" \"),s(\"li\",[t._v(\"mounted阶段：vue实例挂载到真实DOM上，就可以通过DOM获取DOM节点\")]),t._v(\" \"),s(\"li\",[t._v(\"beforeUpdate阶段：响应式数据更新时调用，发生在虚拟DOM打补丁之前，适合在更新之前访问现有的DOM，比如手动移除已添加的事件监听器\")]),t._v(\" \"),s(\"li\",[t._v(\"updated阶段：虚拟DOM重新渲染和打补丁之后调用，组成新的DOM已经更新，避免在这个钩子函数中操作数据，防止死循环\")]),t._v(\" \"),s(\"li\",[t._v(\"beforeDestroy阶段：实例销毁前调用，实例还可以用，this能获取到实例，常用于销毁定时器，解绑事件\")]),t._v(\" \"),s(\"li\",[t._v(\"destroyed阶段：实例销毁后调用，调用后所有事件监听器会被移除，所有的子实例都会被销毁\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue和react有什么区别？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue和react有什么区别？\"}},[t._v(\"#\")]),t._v(\" VUE和REACT有什么区别？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"react整体是函数式的思想，把组件设计成纯组件，状态和逻辑通过参数传入，所以在react中，是单向数据流；\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"vue的思想是响应式的，也就是基于是数据可变的，通过对每一个属性建立Watcher来监听，当属性变化的时候，响应式的更新对应的虚拟dom。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vuex的流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vuex的流程\"}},[t._v(\"#\")]),t._v(\" vuex的流程\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"页面通过mapAction异步提交事件到action。action通过commit把对应参数同步提交到mutation。\\nmutation会修改state中对于的值。 最后通过getter把对应值跑出去，在页面的计算属性中\\n通过mapGetter来动态获取state中的值\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"vuex有哪几种状态和属性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vuex有哪几种状态和属性\"}},[t._v(\"#\")]),t._v(\" vuex有哪几种状态和属性\")]),t._v(\" \"),s(\"blockquote\",[s(\"ul\",[s(\"li\",[t._v(\"state中保存着共有数据，数据是响应式的\")]),t._v(\" \"),s(\"li\",[t._v(\"getter可以对state进行计算操作，主要用来过滤一些数据，可以在多组件之间复用\")]),t._v(\" \"),s(\"li\",[t._v(\"mutations定义的方法动态修改state中的数据，通过commit提交方法，方法必须是同步的\")]),t._v(\" \"),s(\"li\",[t._v(\"actions将mutations里面处理数据的方法变成异步的，就是异步操作数据，通store.dispatch来分发actions，把异步的方法写在actions中，通过commit提交mutations，进行修改数据。\")]),t._v(\" \"),s(\"li\",[t._v(\"modules：模块化vuex\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue路由的两种模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue路由的两种模式\"}},[t._v(\"#\")]),t._v(\" vue路由的两种模式\")]),t._v(\" \"),s(\"blockquote\",[s(\"ul\",[s(\"li\",[t._v(\"hash ——即地址栏URL中的#符号（此hsah 不是密码学里的散列运算） hash 虽然出现URL中，但不会被包含在HTTP请求中，对后端完全没有影响，因此改变hash不会重新加载页面。\")]),t._v(\" \"),s(\"li\",[t._v(\"history ——利用了HTML5 History Interface 中新增的pushState() 和replaceState() 方法\")])]),t._v(\" \"),s(\"p\",[t._v(\"这两个方法应用于浏览器的历史记录站，在当前已有的back、forward、go 的基础之上，它们提供了对历史记录进行修改的功能。只是当它们执行修改是，虽然改变了当前的URL，但你浏览器不会立即向后端发送请求。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue中-key-值的作用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue中-key-值的作用\"}},[t._v(\"#\")]),t._v(\" vue中 key 值的作用\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"当 Vue.js 用v-for正在更新已渲染过的元素列表时，它默认用“就地复用”策略。 如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素。\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"key的作用主要是为了高效的更新虚拟DOM。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"route和-router的区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#route和-router的区别\"}},[t._v(\"#\")]),t._v(\" \"),s(\"code\",[t._v(\"$route\")]),t._v(\"和\"),s(\"code\",[t._v(\"$router\")]),t._v(\"的区别\")]),t._v(\" \"),s(\"blockquote\",[s(\"ul\",[s(\"li\",[t._v(\"$route是“路由信息对象”，包括path，params，hash，query，fullPath，matched，name等路由信息参数。\")]),t._v(\" \"),s(\"li\",[t._v(\"$router是“路由实例”对象包括了路由的跳转方法，钩子函数等。\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue-router守卫\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-router守卫\"}},[t._v(\"#\")]),t._v(\" vue-router守卫\")]),t._v(\" \"),s(\"blockquote\",[s(\"ul\",[s(\"li\",[t._v(\"导航守卫 router.beforeEach 全局前置守卫\")])])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"to: Route: 即将要进入的目标（路由对象）\")]),t._v(\" \"),s(\"li\",[t._v(\"from: Route: 当前导航正要离开的路由\")]),t._v(\" \"),s(\"li\",[t._v(\"next: Function: 一定要调用该方法来 resolve 这个钩子。（一定要用这个函数才能去到下一个路由，如果不用就拦截） 执行效果依赖 next 方法的调用参数。\")]),t._v(\" \"),s(\"li\",[t._v(\"next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed (确认的)。\")]),t._v(\" \"),s(\"li\",[t._v(\"next(false): 取消进入路由，url地址重置为from路由地址(也就是将要离开的路由地址)。\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"// main.js 入口文件\\n    import router from './router'; // 引入路由\\n    router.beforeEach((to, from, next) => { \\n      next();\\n    });\\n    router.beforeResolve((to, from, next) => {\\n      next();\\n    });\\n    router.afterEach((to, from) => {\\n      console.log('afterEach 全局后置钩子');\\n    });\\n\\n\\n\")])])]),s(\"p\",[t._v(\"路由独享的守卫 你可以在路由配置上直接定义 beforeEnter 守卫\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"const router = new VueRouter({\\n  routes: [\\n    {\\n      path: '/foo',\\n      component: Foo,\\n      beforeEnter: (to, from, next) => {\\n        // ...\\n      }\\n    }\\n  ]\\n})\\n\\n\")])])]),s(\"p\",[t._v(\"组件内的守卫 你可以在路由组件内直接定义以下路由导航守卫\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"const Foo = {\\n  template: `...`,\\n  beforeRouteEnter (to, from, next) {\\n    // 在渲染该组件的对应路由被 confirm 前调用\\n    // 不！能！获取组件实例 `this`\\n    // 因为当守卫执行前，组件实例还没被创建\\n  },\\n  beforeRouteUpdate (to, from, next) {\\n    // 在当前路由改变，但是该组件被复用时调用\\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\\n    // 可以访问组件实例 `this`\\n  },\\n  beforeRouteLeave (to, from, next) {\\n    // 导航离开该组件的对应路由时调用，我们用它来禁止用户离开\\n    // 可以访问组件实例 `this`\\n    // 比如还未保存草稿，或者在用户离开前，\\n    将setInterval销毁，防止离开之后，定时器还在调用。\\n  }\\n}\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"axios是什么？怎么使用？描述使用它实现登录功能的流程？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#axios是什么？怎么使用？描述使用它实现登录功能的流程？\"}},[t._v(\"#\")]),t._v(\" axios是什么？怎么使用？描述使用它实现登录功能的流程？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"请求后台资源的模块。\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"$ npm install axios -S装好\\n\\n\")])])]),s(\"blockquote\",[s(\"p\",[t._v(\"然后发送的是跨域，需在配置文件中config/index.js进行设置。后台如果是Tp5则定义一个资源路由。 js中使用import进来，然后.get或.post。返回在.then函数中如果成功，失败则是在.catch函数中\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue修饰符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue修饰符\"}},[t._v(\"#\")]),t._v(\" vue修饰符\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"stop：阻止事件的冒泡\")]),t._v(\" \"),s(\"li\",[t._v(\"prevent：阻止事件的默认行为\")]),t._v(\" \"),s(\"li\",[t._v(\"once：只触发一次\")]),t._v(\" \"),s(\"li\",[t._v(\"self：只触发自己的事件行为时，才会执行\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue项目中的性能优化\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue项目中的性能优化\"}},[t._v(\"#\")]),t._v(\" vue项目中的性能优化\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"1.不要在模板里面写过多表达式\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"2.循环调用子组件时添加key\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"3.频繁切换的使用v-show，不频繁切换的使用v-if\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"4.尽量少用float，可以用flex\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"5.按需加载，可以用require或者import()按需加载需要的组件\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"6.路由懒加载\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue-extend和vue-component\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-extend和vue-component\"}},[t._v(\"#\")]),t._v(\" vue.extend和vue.component\")]),t._v(\" \"),s(\"blockquote\",[s(\"ul\",[s(\"li\",[t._v(\"extend 是构造一个组件的语法器。 然后这个组件你可以作用到Vue.component这个全局注册方法里 还可以在任意vue模板里使用组件。 也可以作用到vue实例或者某个组件中的components属性中并在内部使用apple组件。\")]),t._v(\" \"),s(\"li\",[t._v(\"Vue.component 你可以创建 ，也可以取组件。\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue组件间的参数传递\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue组件间的参数传递\"}},[t._v(\"#\")]),t._v(\" Vue组件间的参数传递\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"父组件与子组件传值\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"父组件传给子组件：子组件通过\"),s(\"code\",[t._v(\"props\")]),t._v(\"方法接受数据；\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"子组件传给父组件： \"),s(\"code\",[t._v(\"$emit\")]),t._v(\" 方法传递参数\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"非父子组件间的数据传递，兄弟组件传值\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"eventBus\")]),t._v(\"，就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件。项目比较小时，用这个比较合适（虽然也有不少人推荐直接用\"),s(\"code\",[t._v(\"VUEX\")]),t._v(\"，具体来说看需求）\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue的路由实现：hash模式-和-history模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue的路由实现：hash模式-和-history模式\"}},[t._v(\"#\")]),t._v(\" Vue的路由实现：hash模式 和 history模式\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"hash\")]),t._v(\"模式：在浏览器中符号\"),s(\"code\",[t._v(\"“#”\")]),t._v(\"，#以及#后面的字符称之为\"),s(\"code\",[t._v(\"hash\")]),t._v(\"，用 \"),s(\"code\",[t._v(\"window.location.hash\")]),t._v(\" 读取。特点：\"),s(\"code\",[t._v(\"hash\")]),t._v(\"虽然在\"),s(\"code\",[t._v(\"URL\")]),t._v(\"中，但不被包括在\"),s(\"code\",[t._v(\"HTTP\")]),t._v(\"请求中；用来指导浏览器动作，对服务端安全无用，\"),s(\"code\",[t._v(\"hash\")]),t._v(\"不会重加载页面。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"history\")]),t._v(\"模式：h\"),s(\"code\",[t._v(\"istory\")]),t._v(\"采用\"),s(\"code\",[t._v(\"HTML5\")]),t._v(\"的新特性；且提供了两个新方法： \"),s(\"code\",[t._v(\"pushState()\")]),t._v(\"， \"),s(\"code\",[t._v(\"replaceState()\")]),t._v(\"可以对浏览器历史记录栈进行修改，以及\"),s(\"code\",[t._v(\"popState\")]),t._v(\"事件的监听到状态变更\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-if-和-v-show-区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-if-和-v-show-区别\"}},[t._v(\"#\")]),t._v(\" v-if 和 v-show 区别\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"v-if\")]),t._v(\"按照条件是否渲染，\"),s(\"code\",[t._v(\"v-show\")]),t._v(\"是\"),s(\"code\",[t._v(\"display\")]),t._v(\"的\"),s(\"code\",[t._v(\"block\")]),t._v(\"或\"),s(\"code\",[t._v(\"none\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"keep-alive的作用是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#keep-alive的作用是什么\"}},[t._v(\"#\")]),t._v(\" \"),s(\"code\",[t._v(\"keep-alive\")]),t._v(\"的作用是什么\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"包裹动态组件时，会缓存不活动的组件实例,主要用于保留组件状态或避免重新渲染\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"比如有一个列表和一个详情，那么用户就会经常执行打开详情=>返回列表=>打开详情…这样的话列表和详情都是一个频率很高的页面，那么就可以对列表组件使用``进行缓存，这样用户每次返回列表的时候，都能从缓存中快速渲染，而不是重新渲染\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"指令v-el的作用是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指令v-el的作用是什么\"}},[t._v(\"#\")]),t._v(\" 指令v-el的作用是什么\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"提供一个在页面上已存在的 \"),s(\"code\",[t._v(\"DOM\")]),t._v(\"元素作为 \"),s(\"code\",[t._v(\"Vue\")]),t._v(\"实例的挂载目标.可以是 CSS 选择器，也可以是一个 \"),s(\"code\",[t._v(\"HTMLElement\")]),t._v(\" 实例,\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"在vue中使用插件的步骤\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在vue中使用插件的步骤\"}},[t._v(\"#\")]),t._v(\" 在Vue中使用插件的步骤\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"采用\"),s(\"code\",[t._v(\"ES6\")]),t._v(\"的\"),s(\"code\",[t._v(\"import ... from ...\")]),t._v(\"语法或\"),s(\"code\",[t._v(\"CommonJS\")]),t._v(\"的\"),s(\"code\",[t._v(\"require()\")]),t._v(\"方法引入插件\")]),t._v(\" \"),s(\"li\",[t._v(\"使用全局方法\"),s(\"code\",[t._v(\"Vue.use( plugin )\")]),t._v(\"使用插件,可以传入一个选项对象\"),s(\"code\",[t._v(\"Vue.use(MyPlugin, { someOption: true })\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue的优点是什么？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue的优点是什么？\"}},[t._v(\"#\")]),t._v(\" vue的优点是什么？\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"低耦合。视图（\"),s(\"code\",[t._v(\"View\")]),t._v(\"）可以独立于\"),s(\"code\",[t._v(\"Model\")]),t._v(\"变化和修改，一个\"),s(\"code\",[t._v(\"ViewModel\")]),t._v(\"可以绑定到不同的\"),s(\"code\",[t._v('\"View\"')]),t._v(\"上，当View变化的时候Model可以不变，当\"),s(\"code\",[t._v(\"Model\")]),t._v(\"变化的时候\"),s(\"code\",[t._v(\"View\")]),t._v(\"也可以不变\")]),t._v(\" \"),s(\"li\",[t._v(\"可重用性。你可以把一些视图逻辑放在一个\"),s(\"code\",[t._v(\"ViewModel\")]),t._v(\"里面，让很多\"),s(\"code\",[t._v(\"view\")]),t._v(\"重用这段视图逻辑\")]),t._v(\" \"),s(\"li\",[t._v(\"可测试。界面素来是比较难于测试的，而现在测试可以针对\"),s(\"code\",[t._v(\"ViewModel\")]),t._v(\"来写\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"路由之间跳转？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#路由之间跳转？\"}},[t._v(\"#\")]),t._v(\" 路由之间跳转？\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"声明式（标签跳转）\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-text extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('<router-link :to=\"index\">\\n')])])]),s(\"p\",[s(\"strong\",[t._v(\"编程式（ js跳转）\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-text extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"router.push('index')\\n\")])])]),s(\"ul\",[s(\"li\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue-组件-data-为什么必须是函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-组件-data-为什么必须是函数\"}},[t._v(\"#\")]),t._v(\" Vue 组件 data 为什么必须是函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"每个组件都是 \"),s(\"code\",[t._v(\"Vue\")]),t._v(\" 的实例。\")]),t._v(\" \"),s(\"li\",[t._v(\"组件共享 \"),s(\"code\",[t._v(\"data\")]),t._v(\" 属性，当 \"),s(\"code\",[t._v(\"data\")]),t._v(\" 的值是同一个引用类型的值时，改变其中一个会影响其他\")]),t._v(\" \"),s(\"li\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"怎么快速定位哪个组件出现性能问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#怎么快速定位哪个组件出现性能问题\"}},[t._v(\"#\")]),t._v(\" 怎么快速定位哪个组件出现性能问题\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"用 \"),s(\"code\",[t._v(\"timeline\")]),t._v(\" 工具。 大意是通过 \"),s(\"code\",[t._v(\"timeline\")]),t._v(\" 来查看每个函数的调用时常，定位出哪个函数的问题，从而能判断哪个组件出了问题\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"extend-能做什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#extend-能做什么\"}},[t._v(\"#\")]),t._v(\" extend 能做什么\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"这个 \"),s(\"code\",[t._v(\"API\")]),t._v(\" 很少用到，作用是扩展组件生成一个构造器，通常会与 \"),s(\"code\",[t._v(\"$mount\")]),t._v(\" 一起使用。\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 创建组件构造器\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" Component \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Vue\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"extend\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  template\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'<div>test</div>'\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 挂载到 #app 上\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Component\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"$mount\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'#app'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 除了上面的方式，还可以用来扩展已有的组件\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" SuperComponent \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Vue\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"extend\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"Component\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SuperComponent\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"created\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        console\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SuperComponent\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"$mount\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'#app'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"mixin-和-mixins-区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mixin-和-mixins-区别\"}},[t._v(\"#\")]),t._v(\" mixin 和 mixins 区别\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"mixin\")]),t._v(\" 用于全局混入，会影响到每个组件实例，通常插件都是这样做初始化的\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"Vue\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"mixin\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"beforeCreate\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// ...逻辑\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 这种方式会影响到每个组件的 beforeCreate 钩子函数\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"虽然文档不建议我们在应用中直接使用 \"),s(\"code\",[t._v(\"mixin\")]),t._v(\"，但是如果不滥用的话也是很有帮助的，比如可以全局混入封装好的 \"),s(\"code\",[t._v(\"ajax\")]),t._v(\" 或者一些工具函数等等。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"mixins\")]),t._v(\" 应该是我们最常使用的扩展组件的方式了。如果多个组件中有相同的业务逻辑，就可以将这些逻辑剥离出来，通过 \"),s(\"code\",[t._v(\"mixins\")]),t._v(\" 混入代码，比如上拉下拉加载数据这种逻辑等等。\")]),t._v(\" \"),s(\"li\",[t._v(\"另外需要注意的是 \"),s(\"code\",[t._v(\"mixins\")]),t._v(\" 混入的钩子函数会先于组件内的钩子函数执行，并且在遇到同名选项的时候也会有选择性的进行合并，具体可以阅读 文档。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"computed-和-watch-区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#computed-和-watch-区别\"}},[t._v(\"#\")]),t._v(\" computed 和 watch 区别\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"computed\")]),t._v(\" 是计算属性，依赖其他属性计算值，并且 \"),s(\"code\",[t._v(\"computed\")]),t._v(\" 的值有缓存，只有当计算值变化才会返回内容。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"watch\")]),t._v(\" 监听到值的变化就会执行回调，在回调中可以进行一些逻辑操作。\")]),t._v(\" \"),s(\"li\",[t._v(\"所以一般来说需要依赖别的属性来动态获得值的时候可以使用 \"),s(\"code\",[t._v(\"computed\")]),t._v(\"，对于监听到值的变化需要做一些复杂业务逻辑的情况可以使用 \"),s(\"code\",[t._v(\"watch\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"另外 \"),s(\"code\",[t._v(\"computer\")]),t._v(\" 和 \"),s(\"code\",[t._v(\"watch\")]),t._v(\" 还都支持对象的写法，这种方式知道的人并不多。\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"vm\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"$watch\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'obj'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 深度遍历\")]),t._v(\"\\n    deep\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 立即触发\")]),t._v(\"\\n    immediate\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 执行的函数\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"handler\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"val\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" oldVal\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" vm \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Vue\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  data\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" a\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  computed\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    aPlus\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// this.aPlus 时触发\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"get\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// this.aPlus = 1 时触发\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"set\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"v\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" v \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"proxy-相比于-defineproperty-的优势\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#proxy-相比于-defineproperty-的优势\"}},[t._v(\"#\")]),t._v(\" Proxy 相比于 defineProperty 的优势\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"数组变化也能监听到\")]),t._v(\" \"),s(\"li\",[t._v(\"不需要深度遍历监听\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" data \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" a\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" reactiveData \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Proxy\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"get\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"target\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" name\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// ...\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// ...\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"hr\"),t._v(\" \"),s(\"h2\",{attrs:{id:\"react\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react\"}},[t._v(\"#\")]),t._v(\" react\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"给我介绍一下react\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#给我介绍一下react\"}},[t._v(\"#\")]),t._v(\" 给我介绍一下react\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"以前我们没有jquery的时候，我们大概的流程是从后端通过ajax获取到数据然后使用jquery生成dom结果然后更新到页面当中，但是随着业务发展，我们的项目可能会越来越复杂，我们每次请求到数据，或则数据有更改的时候，我们又需要重新组装一次dom结构，然后更新页面，这样我们手动同步dom和数据的成本就越来越高，而且频繁的操作dom，也使我我们页面的性能慢慢的降低。\")]),t._v(\" \"),s(\"li\",[t._v(\"这个时候mvvm出现了，mvvm的双向数据绑定可以让我们在数据修改的同时同步dom的更新，dom的更新也可以直接同步我们数据的更改，这个特定可以大大降低我们手动去维护dom更新的成本，\"),s(\"strong\",[t._v(\"mvvm为react的特性之一，虽然react属于单项数据流，需要我们手动实现双向数据绑定。\")])]),t._v(\" \"),s(\"li\",[t._v(\"有了mvvm还不够，因为如果每次有数据做了更改，然后我们都全量更新dom结构的话，也没办法解决我们频繁操作dom结构(降低了页面性能)的问题，为了解决这个问题，\"),s(\"strong\",[t._v(\"react内部实现了一套虚拟dom结构\")]),t._v(\"，也就是用js实现的一套dom结构，他的\"),s(\"strong\",[t._v(\"作用是将真实dom在js中做一套缓存\")]),t._v(\"，每次有数据更改的时候，react内部先使用算法，也就是鼎鼎有名的diff算法对dom结构进行对比，找到那些我们需要新增、更新、删除的dom节点，然后一次性对真实DOM进行更新，这样就大大降低了操作dom的次数。 那么diff算法是怎么运作的呢，首先，diff针对类型不同的节点，会直接判定原来节点需要卸载并且用新的节点来装载卸载的节点的位置；针对于节点类型相同的节点，会对比这个节点的所有属性，如果节点的所有属性相同，那么判定这个节点不需要更新，如果节点属性不相同，那么会判定这个节点需要更新，react会更新并重渲染这个节点。\")]),t._v(\" \"),s(\"li\",[t._v(\"react设计之初是主要负责UI层的渲染，虽然每个组件有自己的state，state表示组件的状态，当状态需要变化的时候，需要使用setState更新我们的组件，但是，我们想通过一个组件重渲染它的兄弟组件，我们就需要将组件的状态提升到父组件当中，让父组件的状态来控制这两个组件的重渲染，当我们组件的层次越来越深的时候，状态需要一直往下传，无疑加大了我们代码的复杂度，我们需要一个状态管理中心，来帮我们管理我们状态state。\")]),t._v(\" \"),s(\"li\",[t._v(\"这个时候，redux出现了，我们可以将所有的state交给redux去管理，当我们的某一个state有变化的时候，依赖到这个state的组件就会进行一次重渲染，这样就解决了我们的我们需要一直把state往下传的问题。redux有action、reducer的概念，action为唯一修改state的来源，reducer为唯一确定state如何变化的入口，这使得redux的数据流非常规范，同时也暴露出了redux代码的复杂，本来那么简单的功能，却需要完成那么多的代码。\")]),t._v(\" \"),s(\"li\",[t._v(\"后来，社区就出现了另外一套解决方案，也就是mobx，它推崇代码简约易懂，只需要定义一个可观测的对象，然后哪个组价使用到这个可观测的对象，并且这个对象的数据有更改，那么这个组件就会重渲染，而且mobx内部也做好了是否重渲染组件的生命周期shouldUpdateComponent，不建议开发者进行更改，这使得我们使用mobx开发项目的时候可以简单快速的完成很多功能，连redux的作者也推荐使用mobx进行项目开发。但是，随着项目的不断变大，mobx也不断暴露出了它的缺点，就是数据流太随意，出了bug之后不好追溯数据的流向，这个缺点正好体现出了redux的优点所在，所以针对于小项目来说，社区推荐使用mobx，对大项目推荐使用redux\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"react和vue的区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react和vue的区别\"}},[t._v(\"#\")]),t._v(\" react和vue的区别\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"   =>  相同点：\\n\\t1.数据驱动页面，提供响应式的视图组件\\n\\t2.都有virtual DOM,组件化的开发，通过props参数进行父子之间组件传递数据，都实现了webComponents规范\\n\\t3.数据流动单向，都支持服务器的渲染SSR\\n\\t4.都有支持native的方法，react有React native， vue有wexx\\n=>  不同点：\\n\\t1.数据绑定：Vue实现了双向的数据绑定，react数据流动是单向的\\n\\t2.数据渲染：大规模的数据渲染，react更快\\n\\t3.使用场景：React配合Redux架构适合大规模多人协作复杂项目，Vue适合小快的项目\\n\\t4.开发风格：react推荐做法jsx + inline style把html和css都写在js了\\n\\t\\t    vue是采用webpack + vue-loader单文件组件格式，html, js, css同一个文件\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"纯函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#纯函数\"}},[t._v(\"#\")]),t._v(\" 纯函数\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Redux数据流里，reduces其实是根据之前的状态（previous state）和现有的action（current action）\\n更新state(这个state可以理解为上下累加器的结果）\\n每次redux reducer被执行时，state和action被传入，这个state根据action进行累加或者是'自身消减'(reduce),\\n进而返回最新的state,这也就是典型reduce函数的用法：state ->  action ->  state\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"react的refs\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react的refs\"}},[t._v(\"#\")]),t._v(\" react的refs\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"refs就想一个逃生窗，允许我们之间访问dom元素或者组件实例，可以向组件添加一个ref属性的值是一个回调函数，\\n它将接受底层dom元素或组件的已挂在实例，作为第一个参数\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"react中的keys\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react中的keys\"}},[t._v(\"#\")]),t._v(\" react中的keys\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"帮组我们跟踪哪些项目已更改、添加、从列表中删除，key是独一无二的，可以让我们高效的去定位元素，并且操作它\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"react的生命周期\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react的生命周期\"}},[t._v(\"#\")]),t._v(\" React的生命周期\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"三个状态：Mounting(已插入真实的DOM）\\n\\t  Updating(正在被重新渲染)\\n\\t  Unmounting(已移除真实的DOM)\\ncomponentDIdMount 在第一次渲染后调用，只在客服端。之后组件已经生成对应的DOM结构，\\ncomponentDidUpdate 在组件完成更新后立即调用，在出初始化是不会调用\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"react子组件向父组件传值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react子组件向父组件传值\"}},[t._v(\"#\")]),t._v(\" React子组件向父组件传值\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"父组件通过props 给子组件传递数据，子组件则是通过调用父组件传给它的函数给父组件传递数据。\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"为什么虚拟dom会提高性能\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么虚拟dom会提高性能\"}},[t._v(\"#\")]),t._v(\" 为什么虚拟DOM会提高性能\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"虚拟DOM相当于在js和真实dom中间加了一个缓存，利用dom diff算法避免了没有必要的dom操作，从而提高性能\\n具体实现步骤：\\n\\t·用JavaScript对象结构表示DOM树的结构；然后用这个树构建一个真正的DOM树，插到文档中\\n        ·当状态变更的时候，重新构造一棵树的对象树，然后用新的树和旧的树进行对比，记录两棵树差异\\n\\t·把2所记录的差异应用到步骤1所构建的真正的DOM树上，视图就更新了。\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"reac性能优化是哪个周期函\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#reac性能优化是哪个周期函\"}},[t._v(\"#\")]),t._v(\" reac性能优化是哪个周期函\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"shouldComponentUpdate 这个方法用来判断是否需要调用render方法重新描绘dom.因为dom的描绘非常消耗性能，\\n如果我们在shouldComponentUpdate方法中能够写出更优化的dom diff算法，可以极大的提高性能\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"怎么划分业务组件和技术组件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#怎么划分业务组件和技术组件\"}},[t._v(\"#\")]),t._v(\" 怎么划分业务组件和技术组件\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"根据组件的职责通常把组件分为UI组件和容器组件\\nUI组件负责UI的呈现，容器组件负责管理数据和逻辑\\n两者通过React-redux提供connect方法联系起来\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"setstate\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setstate\"}},[t._v(\"#\")]),t._v(\" setState\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"setState通过一个队列机制实现state更新，当执行setState时，会将需要更新的state很后放入状态队列\\n而不会立即更新this.state，队列机制可以高效地批量更新state。如果不通过setState而直接修改this.state的值\\t\\n那么该state将不会被放入状态队列中。当下次调用setState并对状态队列进行合并时，就会忽略之前修改的state，造成不可预知的错误\\n\\n同时，也利用了队列机制实现了setState的异步更新，避免了频繁的重复更新state\\n\\n同步更新state:\\n\\tsetState 函数并不会阻塞等待状态更新完毕，因此 setNetworkActivityIndicatorVisible 有可能先于数据渲染完毕就执行。\\n\\t第二个参数是一个回调函数，在setState的异步操作结束并且组件已经重新渲染的时候执行\\n\\t也就是说，我们可以通过这个回调来拿到更新的state的值，实现代码的同步\\n\\n例子：componentDidMount() {\\n\\n\\tfetch('https://test.com')\\n    \\n\\t.then((res) => res.json())\\n    \\n\\t.then(\\n    (data) => {\\nthis.setState({ data:data });\\n\\t\\t\\tStatusBar.setNetworkActivityIndicatorVisible(false);\\n        }\\n\")])])]),s(\"h3\",{attrs:{id:\"shouldcomponentupdate\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#shouldcomponentupdate\"}},[t._v(\"#\")]),t._v(\" shouldComponentUpdate\")]),t._v(\" \"),s(\"p\",[t._v(\"shouldComponentUpdate 这个方法用来判断是否需要调用 render 方法重新描绘 dom。因为 dom 的描绘非常消耗性能，如果我们能在 shouldComponentUpdate 方法中能够写出更优化的 dom diff 算法，可以极大的提高性能。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"展示组件-presentational-component-和容器组件-container-component-之间有何不同\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#展示组件-presentational-component-和容器组件-container-component-之间有何不同\"}},[t._v(\"#\")]),t._v(\" 展示组件(Presentational component)和容器组件(Container component)之间有何不同\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"展示组件关心组件看起来是什么。展示专门通过 props 接受数据和回调，并且几乎不会有自身的状态，但当展示组件拥有自身的状态时，通常也只关心 UI 状态而不是数据的状态。\")]),t._v(\" \"),s(\"li\",[t._v(\"容器组件则更关心组件是如何运作的。容器组件会为展示组件或者其它容器组件提供数据和行为(behavior)，它们会调用 Flux actions，并将其作为回调提供给展示组件。容器组件经常是有状态的，因为它们是(其它组件的)数据源。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"类组件-class-component-和函数式组件-functional-component-之间有何不同\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类组件-class-component-和函数式组件-functional-component-之间有何不同\"}},[t._v(\"#\")]),t._v(\" 类组件(Class component)和函数式组件(Functional component)之间有何不同\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"类组件不仅允许你使用更多额外的功能，如组件自身的状态和生命周期钩子，也能使组件直接访问 store 并维持状态\")]),t._v(\" \"),s(\"li\",[t._v(\"当组件仅是接收 props，并将组件自身渲染到页面时，该组件就是一个 '无状态组件(stateless component)'，可以使用一个纯函数来创建这样的组件。这种组件也被称为哑组件(dumb components)或展示组件\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"状态-state-和属性-props-之间有何不同\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#状态-state-和属性-props-之间有何不同\"}},[t._v(\"#\")]),t._v(\" 状态(state)和属性(props)之间有何不同\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"State 是一种数据结构，用于组件挂载时所需数据的默认值。State 可能会随着时间的推移而发生突变，但多数时候是作为用户事件行为的结果。\")]),t._v(\" \"),s(\"li\",[t._v(\"Props(properties 的简写)则是组件的配置。props 由父组件传递给子组件，并且就子组件而言，props 是不可变的(immutable)。组件不能改变自身的 props，但是可以把其子组件的 props 放在一起(统一管理)。Props 也不仅仅是数据--回调函数也可以通过 props 传递。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"何为受控组件-controlled-component\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#何为受控组件-controlled-component\"}},[t._v(\"#\")]),t._v(\" 何为受控组件(controlled component)\")]),t._v(\" \"),s(\"p\",[t._v(\"在 HTML 中，类似 \"),s(\"code\",[t._v(\",\")]),t._v(' 和 `` 这样的表单元素会维护自身的状态，并基于用户的输入来更新。当用户提交表单时，前面提到的元素的值将随表单一起被发送。但在 React 中会有些不同，包含表单元素的组件将会在 state 中追踪输入的值，并且每次调用回调函数时，如 onChange 会更新 state，重新渲染组件。一个输入表单元素，它的值通过 React 的这种方式来控制，这样的元素就被称为\"受控元素\"。')]),t._v(\" \"),s(\"h3\",{attrs:{id:\"何为高阶组件-higher-order-component\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#何为高阶组件-higher-order-component\"}},[t._v(\"#\")]),t._v(\" 何为高阶组件(higher order component)\")]),t._v(\" \"),s(\"p\",[t._v(\"高阶组件是一个以组件为参数并返回一个新组件的函数。HOC 运行你重用代码、逻辑和引导抽象。最常见的可能是 Redux 的 connect 函数。除了简单分享工具库和简单的组合，HOC 最好的方式是共享 React 组件之间的行为。如果你发现你在不同的地方写了大量代码来做同一件事时，就应该考虑将代码重构为可重用的 HOC。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"为什么建议传递给-setstate-的参数是一个-callback-而不是一个对象\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么建议传递给-setstate-的参数是一个-callback-而不是一个对象\"}},[t._v(\"#\")]),t._v(\" 为什么建议传递给 setState 的参数是一个 callback 而不是一个对象\")]),t._v(\" \"),s(\"p\",[t._v(\"因为 this.props 和 this.state 的更新可能是异步的，不能依赖它们的值去计算下一个 state。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"除了在构造函数中绑定-this，还有其它方式吗\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#除了在构造函数中绑定-this，还有其它方式吗\"}},[t._v(\"#\")]),t._v(\" 除了在构造函数中绑定 this，还有其它方式吗\")]),t._v(\" \"),s(\"p\",[t._v(\"你可以使用属性初始值设定项(property initializers)来正确绑定回调，create-react-app 也是默认支持的。在回调中你可以使用箭头函数，但问题是每次组件渲染时都会创建一个新的回调。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"在构造函数中-调用-super-props-的目的是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在构造函数中-调用-super-props-的目的是什么\"}},[t._v(\"#\")]),t._v(\" (在构造函数中)调用 super(props) 的目的是什么\")]),t._v(\" \"),s(\"p\",[t._v(\"在 super() 被调用之前，子类是不能使用 this 的，在 ES2015 中，子类必须在 constructor 中调用 super()。传递 props 给 super() 的原因则是便于(在子类中)能在 constructor 访问 this.props。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"应该在-react-组件的何处发起-ajax-请求\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应该在-react-组件的何处发起-ajax-请求\"}},[t._v(\"#\")]),t._v(\" 应该在 React 组件的何处发起 Ajax 请求\")]),t._v(\" \"),s(\"p\",[t._v(\"在 React 组件中，应该在 componentDidMount 中发起网络请求。这个方法会在组件第一次“挂载”(被添加到 DOM)时执行，在组件的生命周期中仅会执行一次。更重要的是，你不能保证在组件挂载之前 Ajax 请求已经完成，如果是这样，也就意味着你将尝试在一个未挂载的组件上调用 setState，这将不起作用。在 componentDidMount 中发起网络请求将保证这有一个组件可以更新了。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"事件在-react-中的处理方式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件在-react-中的处理方式\"}},[t._v(\"#\")]),t._v(\" 事件在 React 中的处理方式\")]),t._v(\" \"),s(\"p\",[t._v(\"为了解决跨浏览器兼容性问题，您的 React 中的事件处理程序将传递 SyntheticEvent 的实例，它是 React 的浏览器本机事件的跨浏览器包装器。\")]),t._v(\" \"),s(\"p\",[t._v(\"这些 SyntheticEvent 与您习惯的原生事件具有相同的接口，除了它们在所有浏览器中都兼容。有趣的是，React 实际上并没有将事件附加到子节点本身。React 将使用单个事件监听器监听顶层的所有事件。这对于性能是有好处的，这也意味着在更新 DOM 时，React 不需要担心跟踪事件监听器。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"createelement-和-cloneelement-有什么区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#createelement-和-cloneelement-有什么区别\"}},[t._v(\"#\")]),t._v(\" createElement 和 cloneElement 有什么区别\")]),t._v(\" \"),s(\"p\",[t._v(\"React.createElement():JSX 语法就是用 React.createElement()来构建 React 元素的。它接受三个参数，第一个参数可以是一个标签名。如 div、span，或者 React 组件。第二个参数为传入的属性。第三个以及之后的参数，皆作为组件的子组件。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"React.createElement(\\n    type,\\n    [props],\\n    [...children]\\n)\\n\")])])]),s(\"p\",[t._v(\"React.cloneElement()与 React.createElement()相似，不同的是它传入的第一个参数是一个 React 元素，而不是标签名或组件。新添加的属性会并入原有的属性，传入到返回的新元素中，而就的子元素奖杯替换。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"React.cloneElement(\\n  element,\\n  [props],\\n  [...children]\\n)\\n\")])])]),s(\"h3\",{attrs:{id:\"react-中有三种构建组件的方式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-中有三种构建组件的方式\"}},[t._v(\"#\")]),t._v(\" React 中有三种构建组件的方式\")]),t._v(\" \"),s(\"p\",[t._v(\"React.createClass()、ES6 class 和无状态函数。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"react-组件的划分业务组件技术组件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-组件的划分业务组件技术组件\"}},[t._v(\"#\")]),t._v(\" react 组件的划分业务组件技术组件\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"根据组件的职责通常把组件分为 UI 组件和容器组件。\")]),t._v(\" \"),s(\"li\",[t._v(\"UI 组件负责 UI 的呈现，容器组件负责管理数据和逻辑。\")]),t._v(\" \"),s(\"li\",[t._v(\"两者通过 React-Redux 提供 connect 方法联系起来。\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h2\",{attrs:{id:\"小程序\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序\"}},[t._v(\"#\")]),t._v(\" 小程序\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"微信小程序有几个文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#微信小程序有几个文件\"}},[t._v(\"#\")]),t._v(\" 微信小程序有几个文件\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"WXSS (WeiXin Style Sheets)\")]),t._v(\"是一套样式语言，用于描述 \"),s(\"code\",[t._v(\"WXML\")]),t._v(\" 的组件样式， \"),s(\"code\",[t._v(\"js\")]),t._v(\" 逻辑处理，网络请求\"),s(\"code\",[t._v(\"json\")]),t._v(\"小程序设置，如页面注册，页面标题及 \"),s(\"code\",[t._v(\"tabBar\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"app.json\")]),t._v(\" 必须要有这个文件，如果没有这个文件，项目无法运行，因为微信框架把这个作为配置文件入口，整个小程序的全局配置。包括页面注册，网络设置，以及小程序的\"),s(\"code\",[t._v(\"window\")]),t._v(\" 背景色，配置导航条样式，配置默认标题。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"app.js\")]),t._v(\" 必须要有这个文件，没有也是会报错！但是这个文件创建一下就行 什么都不需要写以后我们可以在这个文件中监听并处理小程序的生命周期函数、声明全局变量。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"app.wxss\")]),t._v(\" 配置全局 \"),s(\"code\",[t._v(\"css\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"微信小程序怎样跟事件传值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#微信小程序怎样跟事件传值\"}},[t._v(\"#\")]),t._v(\" 微信小程序怎样跟事件传值\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"给 \"),s(\"code\",[t._v(\"HTML\")]),t._v(\" 元素添加 \"),s(\"code\",[t._v(\"data-*\")]),t._v(\"属性来传递我们需要的值，然后通过 \"),s(\"code\",[t._v(\"e.currentTarget.dataset\")]),t._v(\" 或\"),s(\"code\",[t._v(\"onload\")]),t._v(\"的\"),s(\"code\",[t._v(\"param\")]),t._v(\"参数获取。但 \"),s(\"code\",[t._v(\"data -\")]),t._v(\" 名称不能有大写字母和不可以存放对象\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"小程序的-wxss-和-css-有哪些不一样的\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序的-wxss-和-css-有哪些不一样的\"}},[t._v(\"#\")]),t._v(\" 小程序的 wxss 和 css 有哪些不一样的\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"wxss\")]),t._v(\"的图片引入需使用外链地址\")]),t._v(\" \"),s(\"li\",[t._v(\"没有 \"),s(\"code\",[t._v(\"Body\")]),t._v(\"；样式可直接使用 \"),s(\"code\",[t._v(\"import\")]),t._v(\" 导入\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"关联微信公众号如何确定用户的唯一性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关联微信公众号如何确定用户的唯一性\"}},[t._v(\"#\")]),t._v(\" 关联微信公众号如何确定用户的唯一性\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"使用 \"),s(\"code\",[t._v(\"wx.getUserInfo\")]),t._v(\" 方法 \"),s(\"code\",[t._v(\"withCredentials\")]),t._v(\" 为 \"),s(\"code\",[t._v(\"true\")]),t._v(\" 时 可获取 \"),s(\"code\",[t._v(\"encryptedData\")]),t._v(\"，里面有 \"),s(\"code\",[t._v(\"union_id\")]),t._v(\"。后端需要进行对称解密\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"微信小程序与vue区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#微信小程序与vue区别\"}},[t._v(\"#\")]),t._v(\" 微信小程序与vue区别\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"生命周期不一样，微信小程序生命周期比较简单\")]),t._v(\" \"),s(\"li\",[t._v(\"数据绑定也不同，微信小程序数据绑定需要使用\"),s(\"code\",[t._v(\"{{}}\")]),t._v(\"，\"),s(\"code\",[t._v(\"vue\")]),t._v(\" 直接\"),s(\"code\",[t._v(\":\")]),t._v(\"就可以\")]),t._v(\" \"),s(\"li\",[t._v(\"显示与隐藏元素，\"),s(\"code\",[t._v(\"vue\")]),t._v(\"中，使用 \"),s(\"code\",[t._v(\"v-if\")]),t._v(\" 和 \"),s(\"code\",[t._v(\"v-show\")]),t._v(\" 控制元素的显示和隐藏，小程序中，使用\"),s(\"code\",[t._v(\"wx-if\")]),t._v(\" 和\"),s(\"code\",[t._v(\"hidden\")]),t._v(\" 控制元素的显示和隐藏\")]),t._v(\" \"),s(\"li\",[t._v(\"事件处理不同，小程序中，全用 \"),s(\"code\",[t._v(\"bindtap(bind+event)\")]),t._v(\"，或者 \"),s(\"code\",[t._v(\"catchtap(catch+event)\")]),t._v(\" 绑定事件,\"),s(\"code\",[t._v(\"vue：\")]),t._v(\"使用 \"),s(\"code\",[t._v(\"v-on:event\")]),t._v(\" 绑定事件，或者使用\"),s(\"code\",[t._v(\"@event\")]),t._v(\" 绑定事件\")]),t._v(\" \"),s(\"li\",[t._v(\"数据双向绑定也不也不一样在 \"),s(\"code\",[t._v(\"vue\")]),t._v(\"中,只需要再表单元素上加上 \"),s(\"code\",[t._v(\"v-model\")]),t._v(\",然后再绑定 \"),s(\"code\",[t._v(\"data\")]),t._v(\"中对应的一个值，当表单元素内容发生变化时，\"),s(\"code\",[t._v(\"data\")]),t._v(\"中对应的值也会相应改变，这是 \"),s(\"code\",[t._v(\"vue\")]),t._v(\"非常 nice 的一点。微信小程序必须获取到表单元素，改变的值，然后再把值赋给一个 \"),s(\"code\",[t._v(\"data\")]),t._v(\"中声明的变量。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"登录\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#登录\"}},[t._v(\"#\")]),t._v(\" 登录\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"unionid和openid\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"了解小程序登陆之前，我们写了解下小程序/公众号登录涉及到两个最关键的用户标识：\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"OpenId\")]),t._v(\" 是一个用户对于一个小程序／公众号的标识，开发者可以通过这个标识识别出用户。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"UnionId\")]),t._v(\" 是一个用户对于同主体微信小程序／公众号／\"),s(\"code\",[t._v(\"APP\")]),t._v(\"的标识，开发者需要在微信开放平台下绑定相同账号的主体。开发者可通过\"),s(\"code\",[t._v(\"UnionId\")]),t._v(\"，实现多个小程序、公众号、甚至APP 之间的数据互通了。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"关键Api\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"wx.login\")]),t._v(\" 官方提供的登录能力\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"wx.checkSession\")]),t._v(\"校验用户当前的\"),s(\"code\",[t._v(\"session_key\")]),t._v(\"是否有效\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"wx.authorize\")]),t._v(\" 提前向用户发起授权请求\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"wx.getUserInfo\")]),t._v(\" 获取用户基本信息\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"登录流程设计\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"利用现有登录体系\")])])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"直接复用现有系统的登录体系，只需要在小程序端设计用户名，密码/验证码输入页面，便可以简便的实现登录，只需要保持良好的用户体验即可\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"利用\"),s(\"code\",[t._v(\"OpenId\")]),t._v(\" 创建用户体系\")])])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"OpenId\")]),t._v(\" 是一个小程序对于一个用户的标识，利用这一点我们可以轻松的实现一套基于小程序的用户体系，值得一提的是这种用户体系对用户的打扰最低，可以实现静默登录。具体步骤如下\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"小程序客户端通过 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 获取 \"),s(\"code\",[t._v(\"code\")])]),t._v(\" \"),s(\"li\",[t._v(\"传递 \"),s(\"code\",[t._v(\"code\")]),t._v(\" 向服务端，服务端拿到 code 调用微信登录凭证校验接口，微信服务器返回 \"),s(\"code\",[t._v(\"openid\")]),t._v(\" 和会话密钥 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" ，此时开发者服务端便可以利用 \"),s(\"code\",[t._v(\"openid\")]),t._v(\" 生成用户入库，再向小程序客户端返回自定义登录态\")]),t._v(\" \"),s(\"li\",[t._v(\"小程序客户端缓存 （通过\"),s(\"code\",[t._v(\"storage\")]),t._v(\"）自定义登录态（\"),s(\"code\",[t._v(\"token\")]),t._v(\"），后续调用接口时携带该登录态作为用户身份标识即可\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"利用 Unionid 创建用户体系\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"如果想实现多个小程序，公众号，已有登录系统的数据互通，可以通过获取到用户 \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 的方式建立用户体系。因为 \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 在同一开放平台下的所所有应用都是相同的，通过 \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 建立的用户体系即可实现全平台数据的互通，更方便的接入原有的功能，那如何获取 \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 呢，有以下两种方式\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"如果户关注了某个相同主体公众号，或曾经在某个相同主体\"),s(\"code\",[t._v(\"App\")]),t._v(\"、公众号上进行过微信登录授权，通过 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 可以直接获取 到 \"),s(\"code\",[t._v(\"unionid\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"结合\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"wx.getUserInfo\\n\")])])]),s(\"p\",[t._v(\"和\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('<button open-type=\"getUserInfo\"><button/>\\n')])])]),s(\"p\",[t._v(\"这两种方式引导用户主动授权，主动授权后通过返回的信息和服务端交互 (这里有一步需要服务端解密数据的过程，很简单，微信提供了示例代码) 即可拿到\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"unionid\\n\")])])]),s(\"p\",[t._v(\"建立用户体系， 然后由服务端返回登录态，本地记录即可实现登录，附上微信提供的最佳实践\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"调用 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 获取 \"),s(\"code\",[t._v(\"code\")]),t._v(\"，然后从微信后端换取到 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，用于解密 \"),s(\"code\",[t._v(\"getUserInfo\")]),t._v(\"返回的敏感数据\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"使用\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"wx.getSetting\\n\")])])]),s(\"p\",[t._v(\"获取用户的授权情况\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"如果用户已经授权，直接调用 \"),s(\"code\",[t._v(\"API\")]),t._v(\" \"),s(\"code\",[t._v(\"wx.getUserInfo\")]),t._v(\" 获取用户最新的信息；\")]),t._v(\" \"),s(\"li\",[t._v(\"用户未授权，在界面中显示一个按钮提示用户登入，当用户点击并授权后就获取到用户的最新信息\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"获取到用户数据后可以进行展示或者发送给自己的后端。\")])])])])]),t._v(\" \"),s(\"p\",[t._v(\"注意事项\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"需要获取 \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 形式的登录体系，在以前（18年4月之前）是通过以下这种方式来实现，但后续微信做了调整（因为一进入小程序，主动弹起各种授权弹窗的这种形式，比较容易导致用户流失），调整为必须使用按钮引导用户主动授权的方式，这次调整对开发者影响较大，开发者需要注意遵守微信的规则，并及时和业务方沟通业务形式，不要存在侥幸心理，以防造成小程序不过审等情况\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-text extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\" wx.login(获取code) ===> wx.getUserInfo(用户授权) ===> 获取 unionid\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"因为小程序不存在 \"),s(\"code\",[t._v(\"cookie\")]),t._v(\" 的概念， 登录态必须缓存在本地，因此强烈建议为登录态设置过期时间\")]),t._v(\" \"),s(\"li\",[t._v(\"值得一提的是如果需要支持风控安全校验，多平台登录等功能，可能需要加入一些公共参数，例如\"),s(\"code\",[t._v(\"platform\")]),t._v(\"，\"),s(\"code\",[t._v(\"channel\")]),t._v(\"，\"),s(\"code\",[t._v(\"deviceParam\")]),t._v(\"等参数。在和服务端确定方案时，作为前端同学应该及时提出这些合理的建议，设计合理的系统。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"openid\")]),t._v(\" ， \"),s(\"code\",[t._v(\"unionid\")]),t._v(\" 不要在接口中明文传输，这是一种危险的行为，同时也很不专业\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"图片导出\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#图片导出\"}},[t._v(\"#\")]),t._v(\" 图片导出\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"这是一种常见的引流方式，一般同时会在图片中附加一个小程序二维码。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"基本\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"借助 \"),s(\"code\",[t._v(\"canvas\")]),t._v(\" 元素，将需要导出的样式首先在 \"),s(\"code\",[t._v(\"canvas\")]),t._v(\" 画布上绘制出来 （\"),s(\"code\",[t._v(\"api\")]),t._v(\"基本和\"),s(\"code\",[t._v(\"h5\")]),t._v(\"保持一致，但有轻微差异，使用时注意即可\")]),t._v(\" \"),s(\"li\",[t._v(\"借助微信提供的 \"),s(\"code\",[t._v(\"canvasToTempFilePath\")]),t._v(\" 导出图片，最后再使用 \"),s(\"code\",[t._v(\"saveImageToPhotosAlbum\")]),t._v(\" （需要授权）保存图片到本地\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"如何优雅实现\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"绘制出需要的样式这一步是省略不掉的。但是我们可以封装一个绘制库，包含常见图形的绘制，例如矩形，圆角矩形，圆， 扇形， 三角形， 文字，图片减少绘制代码，只需要提炼出样式信息，便可以轻松的绘制，最后导出图片存入相册。笔者觉得以下这种方式绘制更为优雅清晰一些，其实也可以使用加入一个type参数来指定绘制类型，传入的一个是样式数组，实现绘制。\")]),t._v(\" \"),s(\"li\",[t._v(\"结合上一步的实现，如果对于同一类型的卡片有多次导出需求的场景，也可以使用自定义组件的方式，封装同一类型的卡片为一个通用组件，在需要导出图片功能的地方，引入该组件即可。\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"CanvasKit\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"constructor\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"drawImg\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"option \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"drawRect\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"option \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"drawText\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"option \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"exportImg\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"option \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n     \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" drawer \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"CanvasKit\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'canvasId'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"drawImg\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"styleObj1\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"drawText\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"styleObj2\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n drawer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"exportImg\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"注意事项\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"小程序中无法绘制网络图片到\"),s(\"code\",[t._v(\"canvas\")]),t._v(\"上，需要通过\"),s(\"code\",[t._v(\"downLoadFile\")]),t._v(\" 先下载图片到本地临时文件才可以绘制\")]),t._v(\" \"),s(\"li\",[t._v(\"通常需要绘制二维码到导出的图片上，有一种方式导出二维码时，需要携带的参数必须做编码，而且有具体的长度（\"),s(\"code\",[t._v(\"32\")]),t._v(\"可见字符）限制，可以借助服务端生成 短链接 的方式来解决\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"数据统计\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据统计\"}},[t._v(\"#\")]),t._v(\" 数据统计\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"数据统计作为目前一种常用的分析用户行为的方式，小程序端也是必不可少的。小程序采取的曝光，点击数据埋点其实和h5是一样的。但是埋点作为一个和业务逻辑不相关的需求，我们如果在每一个点击事件，每一个生命周期加入各种埋点代码，则会干扰正常的业务逻辑，和使代码变的臃肿，笔者提供以下几种思路来解决数据埋点\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"设计一个埋点sdk\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"小程序的代码结构是，每一个 \"),s(\"code\",[t._v(\"Page\")]),t._v(\" 中都有一个 \"),s(\"code\",[t._v(\"Page\")]),t._v(\" 方法，接受一个包含生命周期函数，数据的 业务逻辑对象 包装这层数据，借助小程序的底层逻辑实现页面的业务逻辑。通过这个我们可以想到思路，对\"),s(\"code\",[t._v(\"Page\")]),t._v(\"进行一次包装，篡改它的生命周期和点击事件，混入埋点代码，不干扰业务逻辑，只要做一些简单的配置即可埋点，简单的代码实现如下\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 代码仅供理解思路\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"page\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"params\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" keys \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" params\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"keys\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n   keys\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"forEach\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"v\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"v \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'onLoad'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n         params\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"v\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"options\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n           \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"stat\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"   \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//曝光埋点代码\")]),t._v(\"\\n           params\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"v\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"call\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" options\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"v\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"includes\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'click'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n         params\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"v\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"funciton\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"event\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n           \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" data \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" event\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"dataset\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"config\\n           \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"stat\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 点击埋点\")]),t._v(\"\\n           param\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"v\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"call\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"blockquote\",[s(\"p\",[t._v(\"这种思路不光适用于埋点，也可以用来作全局异常处理，请求的统一处理等场景。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"分析接口\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"对于特殊的一些业务，我们可以采取 接口埋点，什么叫接口埋点呢？很多情况下，我们有的\"),s(\"code\",[t._v(\"api\")]),t._v(\"并不是多处调用的，只会在某一个特定的页面调用，通过这个思路我们可以分析出，该接口被请求，则这个行为被触发了，则完全可以通过服务端日志得出埋点数据，但是这种方式局限性较大，而且属于分析结果得出过程，可能存在误差，但可以作为一种思路了解一下。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"微信自定义数据分析\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"微信本身提供的数据分析能力，微信本身提供了常规分析和自定义分析两种数据分析方式，在小程序后台配置即可。借助小程序数据助手这款小程序可以很方便的查看\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"工程化\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#工程化\"}},[t._v(\"#\")]),t._v(\" 工程化\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"工程化做什么\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"目前的前端开发过程，工程化是必不可少的一环，那小程序工程化都需要做些什么呢，先看下目前小程序开发当中存在哪些问题需要解决：\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"不支持 \"),s(\"code\",[t._v(\"css\")]),t._v(\"预编译器,作为一种主流的 \"),s(\"code\",[t._v(\"css\")]),t._v(\"解决方案，不论是 \"),s(\"code\",[t._v(\"less\")]),t._v(\",\"),s(\"code\",[t._v(\"sass\")]),t._v(\",\"),s(\"code\",[t._v(\"stylus\")]),t._v(\" 都可以提升\"),s(\"code\",[t._v(\"css\")]),t._v(\"效率\")]),t._v(\" \"),s(\"li\",[t._v(\"不支持引入npm包 （这一条，从微信公开课中听闻，微信准备支持）\")]),t._v(\" \"),s(\"li\",[t._v(\"不支持\"),s(\"code\",[t._v(\"ES7\")]),t._v(\"等后续的\"),s(\"code\",[t._v(\"js\")]),t._v(\"特性，好用的\"),s(\"code\",[t._v(\"async await\")]),t._v(\"等特性都无法使用\")]),t._v(\" \"),s(\"li\",[t._v(\"不支持引入外部字体文件，只支持\"),s(\"code\",[t._v(\"base64\")])]),t._v(\" \"),s(\"li\",[t._v(\"没有 \"),s(\"code\",[t._v(\"eslint\")]),t._v(\" 等代码检查工具\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"方案选型\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"对于目前常用的工程化方案，\"),s(\"code\",[t._v(\"webpack\")]),t._v(\"，\"),s(\"code\",[t._v(\"rollup\")]),t._v(\"，\"),s(\"code\",[t._v(\"parcel\")]),t._v(\"等来看，都常用与单页应用的打包和处理，而小程序天生是 “多页应用” 并且存在一些特定的配置。根据要解决的问题来看，无非是文件的编译，修改，拷贝这些处理，对于这些需求，我们想到基于流的 \"),s(\"code\",[t._v(\"gulp\")]),t._v(\"非常的适合处理，并且相对于\"),s(\"code\",[t._v(\"webpack\")]),t._v(\"配置多页应用更加简单。所以小程序工程化方案推荐使用 \"),s(\"code\",[t._v(\"gulp\")])])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"具体开发思路\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"通过 \"),s(\"code\",[t._v(\"gulp\")]),t._v(\" 的 \"),s(\"code\",[t._v(\"task\")]),t._v(\" 实现：\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"实时编译 \"),s(\"code\",[t._v(\"less\")]),t._v(\" 文件至相应目录\")]),t._v(\" \"),s(\"li\",[t._v(\"引入支持\"),s(\"code\",[t._v(\"async\")]),t._v(\"，\"),s(\"code\",[t._v(\"await\")]),t._v(\"的运行时文件\")]),t._v(\" \"),s(\"li\",[t._v(\"编译字体文件为\"),s(\"code\",[t._v(\"base64\")]),t._v(\" 并生成相应\"),s(\"code\",[t._v(\"css\")]),t._v(\"文件，方便使用\")]),t._v(\" \"),s(\"li\",[t._v(\"依赖分析哪些地方引用了\"),s(\"code\",[t._v(\"npm\")]),t._v(\"包，将\"),s(\"code\",[t._v(\"npm\")]),t._v(\"包打成一个文件，拷贝至相应目录\")]),t._v(\" \"),s(\"li\",[t._v(\"检查代码规范\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"小程序架构\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序架构\"}},[t._v(\"#\")]),t._v(\" 小程序架构\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://user-images.githubusercontent.com/2350193/44563914-ff97c380-a792-11e8-8e77-6d0970891e24.png\",alt:\"img\"}})]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"微信小程序的框架包含两部分 \"),s(\"code\",[t._v(\"View\")]),t._v(\" 视图层、\"),s(\"code\",[t._v(\"App Service\")]),t._v(\"逻辑层。\"),s(\"code\",[t._v(\"View\")]),t._v(\" 层用来渲染页面结构，\"),s(\"code\",[t._v(\"AppService\")]),t._v(\" 层用来逻辑处理、数据请求、接口调用。\")])]),t._v(\" \"),s(\"p\",[t._v(\"它们在两个线程里运行。\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"视图层和逻辑层通过系统层的 \"),s(\"code\",[t._v(\"JSBridage\")]),t._v(\" 进行通信，逻辑层把数据变化通知到视图层，触发视图层页面更新，视图层把触发的事件通知到逻辑层进行业务处理\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://user-images.githubusercontent.com/2350193/44186238-db146980-a14a-11e8-8096-bcb8fa6d28b2.png\",alt:\"img\"}})]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"视图层使用 \"),s(\"code\",[t._v(\"WebView\")]),t._v(\" 渲染，\"),s(\"code\",[t._v(\"iOS\")]),t._v(\"中使用自带 \"),s(\"code\",[t._v(\"WKWebView\")]),t._v(\"，在 \"),s(\"code\",[t._v(\"Android\")]),t._v(\" 使用腾讯的 \"),s(\"code\",[t._v(\"x5\")]),t._v(\"内核（基于 \"),s(\"code\",[t._v(\"Blink\")]),t._v(\"）运行。\")]),t._v(\" \"),s(\"li\",[t._v(\"逻辑层使用在 \"),s(\"code\",[t._v(\"iOS\")]),t._v(\" 中使用自带的 \"),s(\"code\",[t._v(\"JSCore\")]),t._v(\" 运行，在 \"),s(\"code\",[t._v(\"Android\")]),t._v(\"中使用腾讯的 \"),s(\"code\",[t._v(\"x5\")]),t._v(\" 内核（基于 \"),s(\"code\",[t._v(\"Blink\")]),t._v(\"）运行。\")]),t._v(\" \"),s(\"li\",[t._v(\"开发工具使用 \"),s(\"code\",[t._v(\"nw.js\")]),t._v(\" 同时提供了视图层和逻辑层的运行环境。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"wxml-wxss\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#wxml-wxss\"}},[t._v(\"#\")]),t._v(\" WXML && WXSS\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"WXML\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"支持数据绑定\")]),t._v(\" \"),s(\"li\",[t._v(\"支持逻辑算术、运算\")]),t._v(\" \"),s(\"li\",[t._v(\"支持模板、引用\")]),t._v(\" \"),s(\"li\",[t._v(\"支持添加事件（\"),s(\"code\",[t._v(\"bindtap\")]),t._v(\"）\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"Wxml\")]),t._v(\"编译器：\"),s(\"code\",[t._v(\"Wcc\")]),t._v(\" 把 \"),s(\"code\",[t._v(\"Wxml\")]),t._v(\"文件 转为 \"),s(\"code\",[t._v(\"JS\")])]),t._v(\" \"),s(\"li\",[t._v(\"执行方式：\"),s(\"code\",[t._v(\"Wcc index.wxml\")])]),t._v(\" \"),s(\"li\",[t._v(\"使用 \"),s(\"code\",[t._v(\"Virtual DOM\")]),t._v(\"，进行局部更新\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"WXSS\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"wxss编译器：\"),s(\"code\",[t._v(\"wcsc\")]),t._v(\" 把\"),s(\"code\",[t._v(\"wxss\")]),t._v(\"文件转化为 \"),s(\"code\",[t._v(\"js\")])]),t._v(\" \"),s(\"li\",[t._v(\"执行方式： \"),s(\"code\",[t._v(\"wcsc index.wxss\")])])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"尺寸单位 rpx\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"rpx（responsive pixel\")]),t._v(\"）: 可以根据屏幕宽度进行自适应。规定屏幕宽为 \"),s(\"code\",[t._v(\"750rpx\")]),t._v(\"。公式：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" dsWidth \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"750\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"export\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"screenHeightOfRpx\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"750\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\" env\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"screenWidth \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" env\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"screenHeight\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"export\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"rpxToPx\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"rpx\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" env\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"screenWidth \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"750\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" rpx\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"export\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"pxToRpx\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"px\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"750\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\" env\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"screenWidth \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" px\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[s(\"strong\",[t._v(\"样式导入\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"使用 \"),s(\"code\",[t._v(\"@import\")]),t._v(\"语句可以导入外联样式表，\"),s(\"code\",[t._v(\"@import\")]),t._v(\"后跟需要导入的外联样式表的相对路径，用 \"),s(\"code\",[t._v(\";\")]),t._v(\" 表示语句结束\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"内联样式\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"静态的样式统一写到 \"),s(\"code\",[t._v(\"class\")]),t._v(\" 中。\"),s(\"code\",[t._v(\"style\")]),t._v(\" 接收动态的样式，在运行时会进行解析，请尽量避免将静态的样式写进 \"),s(\"code\",[t._v(\"style\")]),t._v(\" 中，以免影响渲染速度\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"全局样式与局部样式\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"定义在 \"),s(\"code\",[t._v(\"app.wxss\")]),t._v(\" 中的样式为全局样式，作用于每一个页面。在\"),s(\"code\",[t._v(\"page\")]),t._v(\" 的 \"),s(\"code\",[t._v(\"wxss\")]),t._v(\" 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 \"),s(\"code\",[t._v(\"app.wxss\")]),t._v(\" 中相同的选择器\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"小程序有什么问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序有什么问题\"}},[t._v(\"#\")]),t._v(\" 小程序有什么问题\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"小程序仍然使用 \"),s(\"code\",[t._v(\"WebView\")]),t._v(\" 渲染，并非原生渲染。（部分原生）\")]),t._v(\" \"),s(\"li\",[t._v(\"服务端接口返回的头无法执行，比如：\"),s(\"code\",[t._v(\"Set-Cookie\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"依赖浏览器环境的 \"),s(\"code\",[t._v(\"JS\")]),t._v(\"库不能使用。\")]),t._v(\" \"),s(\"li\",[t._v(\"不能使用 \"),s(\"code\",[t._v(\"npm\")]),t._v(\"，但是可以自搭构建工具或者使用 \"),s(\"code\",[t._v(\"mpvue\")]),t._v(\"。（未来官方有计划支持）\")]),t._v(\" \"),s(\"li\",[t._v(\"不能使用 \"),s(\"code\",[t._v(\"ES7\")]),t._v(\"，可以自己用\"),s(\"code\",[t._v(\"babel+webpack\")]),t._v(\"自搭或者使用 \"),s(\"code\",[t._v(\"mpvue\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"不支持使用自己的字体（未来官方计划支持）。\")]),t._v(\" \"),s(\"li\",[t._v(\"可以用 \"),s(\"code\",[t._v(\"base64\")]),t._v(\" 的方式来使用 \"),s(\"code\",[t._v(\"iconfont\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"小程序不能发朋友圈（可以通过保存图片到本地，发图片到朋友前。二维码可以使用B接口）。\")]),t._v(\" \"),s(\"li\",[t._v(\"获取二维码/小程序接口的限制\")]),t._v(\" \"),s(\"li\",[t._v(\"程序推送只能使用“服务通知” 而且需要用户主动触发提交 \"),s(\"code\",[t._v(\"formId\")]),t._v(\"，\"),s(\"code\",[t._v(\"formId\")]),t._v(\" 只有7天有效期。（现在的做法是在每个页面都放入\"),s(\"code\",[t._v(\"form\")]),t._v(\"并且隐藏以此获取更多的 \"),s(\"code\",[t._v(\"formId\")]),t._v(\"。后端使用原则为：优先使用有效期最短的）\")]),t._v(\" \"),s(\"li\",[t._v(\"小程序大小限制 2M，分包总计不超过 8M\")]),t._v(\" \"),s(\"li\",[t._v(\"转发（分享）小程序不能拿到成功结果，原来可以。链接（小游戏造的孽）\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"授权获取用户信息流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#授权获取用户信息流程\"}},[t._v(\"#\")]),t._v(\" 授权获取用户信息流程\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"session_key\")]),t._v(\" 有有效期，有效期并没有被告知开发者，只知道用户越频繁使用小程序，\"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 有效期越长\")]),t._v(\" \"),s(\"li\",[t._v(\"在调用 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 时会直接更新 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，导致旧 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 失效\")]),t._v(\" \"),s(\"li\",[t._v(\"小程序内先调用 \"),s(\"code\",[t._v(\"wx.checkSession\")]),t._v(\" 检查登录态，并保证没有过期的 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 不会被更新，再调用 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 获取 \"),s(\"code\",[t._v(\"code\")]),t._v(\"。接着用户授权小程序获取用户信息，小程序拿到加密后的用户数据，把加密数据和 \"),s(\"code\",[t._v(\"code\")]),t._v(\" 传给后端服务。后端通过 \"),s(\"code\",[t._v(\"code\")]),t._v(\" 拿到 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 并解密数据，将解密后的用户信息返回给小程序\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"先授权获取用户信息再-login-会发生什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#先授权获取用户信息再-login-会发生什么\"}},[t._v(\"#\")]),t._v(\" 先授权获取用户信息再 login 会发生什么\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"用户授权时，开放平台使用旧的 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 对用户信息进行加密。调用 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 重新登录，会刷新 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，这时后端服务从开放平台获取到新 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，但是无法对老 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 加密过的数据解密，用户信息获取失败\")]),t._v(\" \"),s(\"li\",[t._v(\"在用户信息授权之前先调用 \"),s(\"code\",[t._v(\"wx.checkSession\")]),t._v(\" 呢？\"),s(\"code\",[t._v(\"wx.checkSession\")]),t._v(\" 检查登录态，并且保证 wx.login 不会刷新 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，从而让后端服务正确解密数据。但是这里存在一个问题，如果小程序较长时间不用导致 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\" 过期，则 \"),s(\"code\",[t._v(\"wx.login\")]),t._v(\" 必定会重新生成 \"),s(\"code\",[t._v(\"session_key\")]),t._v(\"，从而再一次导致用户信息解密失败\")])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}